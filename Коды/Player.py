from Bag import *
from Rack import *

# Этот метод реализует серверную модель игрока в игре. 
# Инициализирует стойку игрока и позволяет вам задать/получить имя игрока
class Player:
   
   # Инициализирует экземпляр player. Создает стойку player, создавая экземпляр этого класса.
 # param1 сумка, которая используется для создания стойки players.
    def __init__(self, bag):
        self.rack = Rack(bag)
        self.score = 0

	# возвращает users rack в виде строки.
 # возвращает строку, в которой каждый символ является частью users rack.
    def getRackStr(self):
       # Возвращает стойку игрока.
        return self.rack.getRackStr()

	# возвращает пользовательскую стойку в виде массива.
 # возвращает объект rack.
    def getRackArr(self):
        # Возвращает стойку игрока в виде массива.
        return self.rack.getRackArr()

	# Увеличивает счет игроков.
 # param1 увеличение - это величина, на которую увеличивается счет игроков.
    def increaseScore(self, increase):
        
#Увеличивает счет игрока на определенную величину. Принимает увеличение (int) в качестве аргумента и добавляет его к счету.
        if increase >= 0:
            self.score += increase
        else:
            raise ValueError("Неверная сумма баллов")

	# краткое описание возвращает счет игроков.
 # возвращает счет.
    def getScore(self):
      # Возвращает результат игрока
        return self.score