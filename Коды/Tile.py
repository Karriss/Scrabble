#  Этот метод реализует базовую модель плиток для игры Scrabble.

class Tile:
    # инициализирует фрагмент, присоединяя к нему его строку и связанное с ней значение score из объекта типа данных 
    # dictionary с именем LETTER_values.
    # param1 буква указанного фрагмента.
    def __init__(self, letter):
        LETTER_VALUES = {
            "А": 1, "Б": 3, "В": 2, "Г": 3, "Д": 2, "Е": 1, "Ж": 5, "З": 5, "И": 1, "Й": 2, "К": 2,
        "Л": 2, "М": 2, "Н": 1, "О": 1, "П": 2, "Р": 2, "С": 2, "Т": 2, "У": 3, "Ф": 10, "Х": 5, "Ц": 10, "Ч": 5,
        "Ш": 10, "Щ": 10, "Ы": 5, "Ъ": 10, "Ь": 5, "Э": 10, "Ю": 10, "Я": 3
        }
        # Инициализирует класс tile. Принимает букву в качестве строки, а словарь буквенных значений в качестве аргументов
        self.letter = letter.upper()
        self.score = 0

        if self.letter not in LETTER_VALUES:
            raise ValueError("Неверный символ: {}".format(letter))
        
        self.score = LETTER_VALUES[self.letter]

	# возвращает строковое значение буквы фрагмента.
 # Возвращает строку, соответствующую букве фрагмента.
    def getLetter(self):
        # Возвращает букву плитки (строку).
        return self.letter

	## возвращает оценку буквы плитки.
 # Возвращает целочисленное значение оценки плитки.
    def getScore(self):
        # Возвращает значение оценки плитки.
        return self.score
